//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System.Globalization;
using System.Resources;
using System.ComponentModel;

namespace OSDPBench.Core.Resources;

/// <summary>
/// A strongly typed resource class for looking up localized strings, etc.
/// </summary>
public class Resources : INotifyPropertyChanged
{
    private static ResourceManager? _resourceManager;
    
    private static CultureInfo? _resourceCulture;
    
    /// <summary>
    /// Event raised when resource properties change due to culture changes
    /// </summary>
    public static event PropertyChangedEventHandler? PropertyChanged;
    
    /// <summary>
    /// Returns the cached ResourceManager instance used by this class.
    /// </summary>
    public static ResourceManager ResourceManager
    {
        get
        {
            if (_resourceManager is null)
            {
                var temp = new ResourceManager("OSDPBench.Core.Resources.Resources", typeof(Resources).Assembly);
                _resourceManager = temp;
            }
            return _resourceManager;
        }
    }
    
    /// <summary>
    /// Overrides the current thread's CurrentUICulture property for all
    /// resource lookups using this strongly typed resource class.
    /// </summary>
    public static CultureInfo? Culture
    {
        get => _resourceCulture;
        set 
        { 
            if (_resourceCulture != value)
            {
                _resourceCulture = value;
                OnPropertyChanged();
            }
        }
    }
    
    /// <summary>
    /// Gets a localized string by key
    /// </summary>
    public static string GetString(string key)
    {
        return ResourceManager.GetString(key, _resourceCulture) ?? $"[{key}]";
    }
    
    /// <summary>
    /// Changes the current culture and notifies all subscribers
    /// </summary>
    public static void ChangeCulture(CultureInfo newCulture)
    {
        Culture = newCulture;
        System.Threading.Thread.CurrentThread.CurrentCulture = newCulture;
        System.Threading.Thread.CurrentThread.CurrentUICulture = newCulture;
        
        // Notify all properties that depend on culture have changed
        OnPropertyChanged(string.Empty);
    }
    
    /// <summary>
    /// Raises the PropertyChanged event
    /// </summary>
    private static void OnPropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
    {
        PropertyChanged?.Invoke(null, new PropertyChangedEventArgs(propertyName));
    }
    
    #region INotifyPropertyChanged Implementation
    event PropertyChangedEventHandler? INotifyPropertyChanged.PropertyChanged
    {
        add => PropertyChanged += value;
        remove => PropertyChanged -= value;
    }
    #endregion
}